// <auto-generated />
using System;
using JurayUniversal.Persistence.EF.SQL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JurayUniversal.Persistence.EF.SQL.Migrations
{
    [DbContext(typeof(DashboardDbContext))]
    [Migration("20230614125220_init-cat")]
    partial class initcat
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("JurayUniversal.Domain.Models.Blog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("BlogCategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BlogCategoryId");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.BlogCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("Publish")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BlogCategories");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.EnableDevice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("DeviceInformation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DisableDevice")
                        .HasColumnType("bit");

                    b.Property<string>("UserInformation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EnableDevices");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.FAQ", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Show")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FAQs");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.MailingSystem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NotificationStatus")
                        .HasColumnType("int");

                    b.Property<int>("NotificationType")
                        .HasColumnType("int");

                    b.Property<string>("Receipient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Retries")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MailingSystems");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.PageCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("HomeSortFrom")
                        .HasColumnType("int");

                    b.Property<int>("MenuSortOrder")
                        .HasColumnType("int");

                    b.Property<bool>("Publish")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PageCategories");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.PageSection", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ButtonLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ButtonText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Disable")
                        .HasColumnType("bit");

                    b.Property<bool>("DisableButton")
                        .HasColumnType("bit");

                    b.Property<bool>("FixedAfterFooter")
                        .HasColumnType("bit");

                    b.Property<string>("FullDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HomePageSortOrder")
                        .HasColumnType("int");

                    b.Property<int>("HomeSortFrom")
                        .HasColumnType("int");

                    b.Property<string>("ImageKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiniTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PageSortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Qoute")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondImageKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ShowInHome")
                        .HasColumnType("bit");

                    b.Property<string>("TemplateKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("WebPageId")
                        .HasColumnType("bigint");

                    b.Property<string>("YoutubeUrlLink")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("WebPageId");

                    b.ToTable("PageSections");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.PageSectionList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ButtonLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ButtonText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Disable")
                        .HasColumnType("bit");

                    b.Property<string>("IconText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiniTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoreDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PageSectionId")
                        .HasColumnType("bigint");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PageSectionId");

                    b.ToTable("PageSectionLists");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("FullDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ShowInDropdown")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowInHome")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleBackgroundKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleBackgroundUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProductFeature", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductFeatures");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProductSample", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductSamples");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Profile", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Setting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ActivateProductsInHome")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateServicesInHome")
                        .HasColumnType("bit");

                    b.Property<bool>("AddFaqToFooter")
                        .HasColumnType("bit");

                    b.Property<bool>("AddFaqToHome")
                        .HasColumnType("bit");

                    b.Property<bool>("AddPartnerToHome")
                        .HasColumnType("bit");

                    b.Property<bool>("AddTestimonyToFooter")
                        .HasColumnType("bit");

                    b.Property<bool>("AddTestimonyToHome")
                        .HasColumnType("bit");

                    b.Property<string>("AddressOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DefaultAttendanceCloseTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DefaultAttendanceStartTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DefaultAttendanceStartTimeSaturday")
                        .HasColumnType("datetime2");

                    b.Property<string>("DefaultTitleBackgroundKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultTitleBackgroundUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DisableMainTopMenu")
                        .HasColumnType("bit");

                    b.Property<int>("EarlyMinute")
                        .HasColumnType("int");

                    b.Property<string>("EmailOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailThree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacebookPage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoogleMap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstagramPage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobCardNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobCardTitleBackgroundKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobCardTitleBackgroundUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LateMinute")
                        .HasColumnType("int");

                    b.Property<int>("OntimeMinute")
                        .HasColumnType("int");

                    b.Property<string>("PhoneOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneThree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qoute")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReportCloseTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ShowEmailOneInFooter")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowEmailOneInTop")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowEmailThreeInFooter")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowEmailThreeInTop")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowEmailTwoInFooter")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowEmailTwoInTop")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowPhoneOneInFooter")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowPhoneOneInTop")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowPhoneThreeInFooter")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowPhoneThreeInTop")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowPhoneTwoInFooter")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowPhoneTwoInTop")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowSixProducts")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowSixService")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowThreeProducts")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowThreeService")
                        .HasColumnType("bit");

                    b.Property<string>("SignatureKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignatureName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignatureTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignatureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TiktokPage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TopNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TwitterPage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VeryLateMinute")
                        .HasColumnType("int");

                    b.Property<string>("WorkingHour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YoutubeChannel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Slider", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ButtonLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ButtonText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsVideo")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Show")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sliders");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.SuperSetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("ActivateComingSoon")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateOnlyAuthorizedDevice")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateSMS")
                        .HasColumnType("bit");

                    b.Property<bool>("Attendance")
                        .HasColumnType("bit");

                    b.Property<bool>("Blogs")
                        .HasColumnType("bit");

                    b.Property<string>("CompanyIconKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyIconUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyLogoKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyLogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyWebsiteLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Configuration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ContactUsRequest")
                        .HasColumnType("bit");

                    b.Property<bool>("Dashboard")
                        .HasColumnType("bit");

                    b.Property<string>("DashboardCSS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DashboardTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailTemplate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Expenses")
                        .HasColumnType("bit");

                    b.Property<bool>("FAQ")
                        .HasColumnType("bit");

                    b.Property<bool>("Forum")
                        .HasColumnType("bit");

                    b.Property<bool>("Jobs")
                        .HasColumnType("bit");

                    b.Property<bool>("JustWebsite")
                        .HasColumnType("bit");

                    b.Property<string>("LayoutCSS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoginCSS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoginNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoginNoteFooter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoginTemplateKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ManagePages")
                        .HasColumnType("bit");

                    b.Property<bool>("MeetingsManagement")
                        .HasColumnType("bit");

                    b.Property<string>("ProductTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Proposals")
                        .HasColumnType("bit");

                    b.Property<bool>("ReportingSystem")
                        .HasColumnType("bit");

                    b.Property<bool>("RoleManagement")
                        .HasColumnType("bit");

                    b.Property<string>("SMSTemplate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Settings")
                        .HasColumnType("bit");

                    b.Property<bool>("Sliders")
                        .HasColumnType("bit");

                    b.Property<string>("TemplateLayoutKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UserManagement")
                        .HasColumnType("bit");

                    b.Property<string>("WebsiteTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SuperSettings");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.TemplateCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Layout")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoginLayout")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateColorPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniqueKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TemplateCategories");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.TemplateType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("TemplateCategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("TrackKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TemplateCategoryId");

                    b.ToTable("TemplateTypes");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Testimony", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Testimonies");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.WebPage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("HomeSortFrom")
                        .HasColumnType("int");

                    b.Property<string>("ImageKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PageCategoryId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Publish")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowInFooter")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowInMainMenu")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowInMainTop")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowInMenuDropDown")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PageCategoryId");

                    b.ToTable("WebPages");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Blog", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.BlogCategory", "BlogCategory")
                        .WithMany("Blogs")
                        .HasForeignKey("BlogCategoryId");

                    b.Navigation("BlogCategory");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.PageSection", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.WebPage", "WebPage")
                        .WithMany("PageSections")
                        .HasForeignKey("WebPageId");

                    b.Navigation("WebPage");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.PageSectionList", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.PageSection", "PageSection")
                        .WithMany("PageSectionLists")
                        .HasForeignKey("PageSectionId");

                    b.Navigation("PageSection");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProductFeature", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.Product", "Product")
                        .WithMany("ProductFeatures")
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProductSample", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.Product", "Product")
                        .WithMany("ProductSamples")
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.TemplateType", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.TemplateCategory", null)
                        .WithMany("TemplateTypes")
                        .HasForeignKey("TemplateCategoryId");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.WebPage", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.PageCategory", "PageCategory")
                        .WithMany("WebPages")
                        .HasForeignKey("PageCategoryId");

                    b.Navigation("PageCategory");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.Profile", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.Profile", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JurayUniversal.Domain.Models.Profile", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.Profile", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.BlogCategory", b =>
                {
                    b.Navigation("Blogs");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.PageCategory", b =>
                {
                    b.Navigation("WebPages");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.PageSection", b =>
                {
                    b.Navigation("PageSectionLists");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Product", b =>
                {
                    b.Navigation("ProductFeatures");

                    b.Navigation("ProductSamples");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.TemplateCategory", b =>
                {
                    b.Navigation("TemplateTypes");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.WebPage", b =>
                {
                    b.Navigation("PageSections");
                });
#pragma warning restore 612, 618
        }
    }
}
