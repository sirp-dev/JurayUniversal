// <auto-generated />
using System;
using JurayUniversal.Persistence.EF.SQL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JurayUniversal.Persistence.EF.SQL.Migrations
{
    [DbContext(typeof(DashboardDbContext))]
    [Migration("20231124085319_ribonTask-2")]
    partial class ribonTask2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("JurayUniversal.Domain.Models.AdditionalProfile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("AdditionalProfiles");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Attendance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("ArivalPeriodStatus")
                        .HasColumnType("int");

                    b.Property<int>("AttendanceStatus")
                        .HasColumnType("int");

                    b.Property<int>("ClosePeriodStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Blog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("AddToRibon")
                        .HasColumnType("bit");

                    b.Property<long?>("BlogCategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Publish")
                        .HasColumnType("bit");

                    b.Property<string>("RibonCustomDisplayTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RibonSortOrder")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BlogCategoryId");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.BlogCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("Publish")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BlogCategories");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.CareerFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ApplicationKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicationUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CertificateKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CertificateUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CvKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CvUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DOB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CareerFiles");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.CareerPath", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CareerPaths");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ChatMessage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("All")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("UserId");

                    b.ToTable("ChatMessage");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ClientRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ClientRequest");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.CompanyFund", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("FundMeans")
                        .HasColumnType("int");

                    b.Property<long>("FundSourceId")
                        .HasColumnType("bigint");

                    b.Property<int>("FundStatus")
                        .HasColumnType("int");

                    b.Property<int>("FundType")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiptKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiptUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FundSourceId");

                    b.ToTable("CompanyFunds");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.CompanyProgram", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CompanyProgramCategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Show")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyProgramCategoryId");

                    b.ToTable("CompanyPrograms");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.CompanyProgramCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Publish")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowInDashboard")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowInMenu")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompanyProgramCategories");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.CompayExpenses", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("ApprovedByCEO")
                        .HasColumnType("bit");

                    b.Property<bool>("ApprovedByCFO")
                        .HasColumnType("bit");

                    b.Property<bool>("ApprovedByManager")
                        .HasColumnType("bit");

                    b.Property<string>("CeoNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CfoNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Close")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<long>("ExpensesCategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("ManagerNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProveImageKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProveImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ExpensesCategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("CompayExpenses");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ContactUs", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Report")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContactUs");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.DashboardData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UseAccounts")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("DashboardDatas");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.DashboardDataList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("DashboardDataId")
                        .HasColumnType("bigint");

                    b.Property<long>("DataIdQuery")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DashboardDataId");

                    b.ToTable("DashboardDataLists");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.DashboardSetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ActivityProgramTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ShowActivityProgram")
                        .HasColumnType("bit");

                    b.Property<bool>("UserCustomDashboard")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("DashboardSettings");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.DataConfig", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Configuration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DashboardCSS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LayoutCSS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LayoutJavaScript")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LiveConfiguration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoginCSS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RedirectTohttps")
                        .HasColumnType("bit");

                    b.Property<bool>("RedirectTohttpswww")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("DataConfigs");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.EnableDevice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("DeviceInformation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DisableDevice")
                        .HasColumnType("bit");

                    b.Property<string>("UserInformation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EnableDevices");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ExpensesCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ExpensesCategories");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.FAQ", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Show")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FAQs");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.FundSource", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("FundSources");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.GeneralFeature", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GeneralFeatures");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Job", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ApprovedDomain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Colors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescribeOrganization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DoWeDoLogo")
                        .HasColumnType("bit");

                    b.Property<bool>("DoYouHaveLogo")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiringDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IHaveMadePayment")
                        .HasColumnType("bit");

                    b.Property<bool>("InformationVerified")
                        .HasColumnType("bit");

                    b.Property<long?>("JobCategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Objectives")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficePhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ReminderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestDomain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RequestFinishDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RequestStartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniqeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebsiteOnMind")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JobCategoryId");

                    b.HasIndex("ProfileId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.JobCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Disable")
                        .HasColumnType("bit");

                    b.Property<bool>("Private")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JobCategories");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.JobDesignation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JobDesignations");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.JobFeature", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("Compulsory")
                        .HasColumnType("bit");

                    b.Property<int>("DaysToComplete")
                        .HasColumnType("int");

                    b.Property<bool>("Disable")
                        .HasColumnType("bit");

                    b.Property<bool>("ForPrivate")
                        .HasColumnType("bit");

                    b.Property<long?>("JobId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Paid")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Selected")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("JobFeatures");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.LocalGoverment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("LGAName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StatesId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("StatesId");

                    b.ToTable("LocalGoverments");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.MailingSystem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NotificationStatus")
                        .HasColumnType("int");

                    b.Property<int>("NotificationType")
                        .HasColumnType("int");

                    b.Property<string>("Receipient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Retries")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MailingSystems");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Meeting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CloseTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("CloseUpdate")
                        .HasColumnType("bit");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Minute")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Meetings");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.MeetingAttendance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("MeetingId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("MeetingId");

                    b.HasIndex("UserId");

                    b.ToTable("MeetingAttendances");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Message", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSent")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NotificationStatus")
                        .HasColumnType("int");

                    b.Property<int>("NotificationType")
                        .HasColumnType("int");

                    b.Property<string>("Recipient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Retries")
                        .HasColumnType("int");

                    b.Property<string>("SentVia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.NewsLetter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NewsLetter");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.OfficeActivityCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OfficeActivityCategories");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.OfficeActivityDialy", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Customer")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Logs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OfficeActivityCategoryId")
                        .HasColumnType("bigint");

                    b.Property<int>("UpdateCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LastUpdateById");

                    b.HasIndex("OfficeActivityCategoryId");

                    b.ToTable("OfficeActivityDialies");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.PageCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("HomeSortFrom")
                        .HasColumnType("int");

                    b.Property<int>("MenuSortOrder")
                        .HasColumnType("int");

                    b.Property<bool>("Publish")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PageCategories");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.PageSection", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("AddToRibon")
                        .HasColumnType("bit");

                    b.Property<string>("ButtonLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ButtonText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DirectUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Disable")
                        .HasColumnType("bit");

                    b.Property<bool>("DisableButton")
                        .HasColumnType("bit");

                    b.Property<bool>("FixedAfterFooter")
                        .HasColumnType("bit");

                    b.Property<string>("FullDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HomePageSortOrder")
                        .HasColumnType("int");

                    b.Property<int>("HomeSortFrom")
                        .HasColumnType("int");

                    b.Property<string>("ImageKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiniTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PageSortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Qoute")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RibonCustomDisplayTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RibonSortOrder")
                        .HasColumnType("int");

                    b.Property<string>("SecondImageKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ShowInHome")
                        .HasColumnType("bit");

                    b.Property<string>("TemplateKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("WebPageId")
                        .HasColumnType("bigint");

                    b.Property<string>("YoutubeUrlLink")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("WebPageId");

                    b.ToTable("PageSections");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.PageSectionList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("AddToRibon")
                        .HasColumnType("bit");

                    b.Property<string>("ButtonLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ButtonText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DirectUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Disable")
                        .HasColumnType("bit");

                    b.Property<string>("IconText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiniTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoreDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PageSectionId")
                        .HasColumnType("bigint");

                    b.Property<string>("RibonCustomDisplayTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RibonSortOrder")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PageSectionId");

                    b.ToTable("PageSectionLists");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Plan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("Compulsory")
                        .HasColumnType("bit");

                    b.Property<int>("DaysToComplete")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Disable")
                        .HasColumnType("bit");

                    b.Property<bool>("ForPrivate")
                        .HasColumnType("bit");

                    b.Property<long>("JobCategoryId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JobCategoryId");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.PortfolioContactUs", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("PortfolioContactUses");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.PortfolioTemplate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SampleKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SampleUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PortfolioTemplates");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.PostModal", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ButtonLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModalOccurance")
                        .HasColumnType("int");

                    b.Property<int>("ModalTime")
                        .HasColumnType("int");

                    b.Property<bool>("Publish")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowDescription")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowImage")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowOnlyImage")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowTitle")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StopTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PostModal");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ButtonText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DisableAmount")
                        .HasColumnType("bit");

                    b.Property<string>("FullDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiniTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProductCategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ShowInDropdown")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowInHome")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowSamples")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("StatusNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleBackgroundKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleBackgroundUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProductCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("HomeSortFrom")
                        .HasColumnType("int");

                    b.Property<int>("MenuSortOrder")
                        .HasColumnType("int");

                    b.Property<bool>("Publish")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProductFeature", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductFeatures");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProductSample", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductSamples");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Profile", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AltPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Biography")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CVFilePathKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CVFilePathUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactMailEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("DateOfBirthStatus")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("EmergencyContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyContactRelationship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<long?>("JobDesignationId")
                        .HasColumnType("bigint");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("OfficeEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportFilePathKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportFilePathUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentHomeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentLga")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("PortfolioProfile")
                        .HasColumnType("bit");

                    b.Property<string>("RefCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UniqueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UserCategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("UserStatus")
                        .HasColumnType("int");

                    b.Property<string>("WebsiteAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JobDesignationId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("UserCategoryId");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProfileCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("Authorize")
                        .HasColumnType("bit");

                    b.Property<string>("PrivacyTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TokenKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("ProfileCategories");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProfileCategoryList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("Authorize")
                        .HasColumnType("bit");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Currently")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Employer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldOfStudy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Honours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Percentage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrivacyTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProfileCategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProfileId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Qualification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TokenKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfileCategoryId");

                    b.HasIndex("ProfileId");

                    b.ToTable("ProfileCategoryLists");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProfilePortfolio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebsiteUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("ProfilePortfolios");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProfilePortfolioSetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("AccountUpgraded")
                        .HasColumnType("bit");

                    b.Property<string>("DefaultWebLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DisableAccount")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableContactUs")
                        .HasColumnType("bit");

                    b.Property<bool>("FirstTime")
                        .HasColumnType("bit");

                    b.Property<long?>("PortfolioTemplateId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProfileId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("RegDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TimeFrame")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpgradeWebLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UseUpgradeWebLink")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("PortfolioTemplateId");

                    b.HasIndex("ProfileId");

                    b.ToTable("ProfilePortfolioSetting");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProgramUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("CompanyProgramId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyProgramId");

                    b.HasIndex("UserId");

                    b.ToTable("ProgramUsers");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProjectCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectCategories");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProjectFeature", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Challenges")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("DateFinised")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateStarted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<long>("GeneralFeatureId")
                        .HasColumnType("bigint");

                    b.Property<int>("ProjectFeatureStatus")
                        .HasColumnType("int");

                    b.Property<long>("ProjectMainId")
                        .HasColumnType("bigint");

                    b.Property<string>("Report")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UseFeaturesCost")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("GeneralFeatureId");

                    b.HasIndex("ProjectMainId");

                    b.ToTable("ProjectFeatures");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProjectFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("FileKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProjectMainId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectMainId");

                    b.ToTable("ProjectFiles");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProjectMain", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<decimal>("AmountSpent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Authentications")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateFinised")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateStarted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinancialReport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastDateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LogoKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Materials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileReferralId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("ProjectCategoryId")
                        .HasColumnType("bigint");

                    b.Property<int>("ProjectStatus")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniqueId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Urls")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfileReferralId");

                    b.HasIndex("ProjectCategoryId");

                    b.ToTable("ProjectMains");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProjectPosition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectPositions");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProjectTask", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Challenges")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("DateFinised")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateStarted")
                        .HasColumnType("datetime2");

                    b.Property<int>("Percentage")
                        .HasColumnType("int");

                    b.Property<string>("ProfileId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("ProjectFeatureId")
                        .HasColumnType("bigint");

                    b.Property<int>("ProjectTaskStatus")
                        .HasColumnType("int");

                    b.Property<string>("Report")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.HasIndex("ProjectFeatureId");

                    b.ToTable("ProjectTasks");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProjectTeam", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProjectMainId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectMainId");

                    b.ToTable("ProjectTeams");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProjectUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("DateJoined")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateLeft")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProfileId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<long?>("ProjectPositionId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProjectTeamId")
                        .HasColumnType("bigint");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.HasIndex("ProjectPositionId");

                    b.HasIndex("ProjectTeamId");

                    b.HasIndex("RoleId");

                    b.ToTable("ProjectUsers");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Proposal", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateApproved")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateSubmitted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProposalStatus")
                        .HasColumnType("int");

                    b.Property<string>("SubmittedById")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypedProposal")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubmittedById");

                    b.ToTable("Proposals");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProposalFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProposalId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProposalId");

                    b.ToTable("ProposalFiles");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Report", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Achievement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("IssuesAndChallenges")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Log")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManagerReport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlansForNextDay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReportPeriodStatus")
                        .HasColumnType("int");

                    b.Property<int>("ReportStatus")
                        .HasColumnType("int");

                    b.Property<string>("TaskNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskNoteStatus")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("VerificationStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Report");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Salary", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("ApprovedByCEO")
                        .HasColumnType("bit");

                    b.Property<bool>("ApprovedByCFO")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ApprovedByCeoDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ApprovedByCfoDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ApprovedByManager")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ApprovedByManagerDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BonusAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CeoNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CfoNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DefaulterCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ManagerNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Month")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Salarys");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Setting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ActivateProductsInHome")
                        .HasColumnType("bit");

                    b.Property<bool>("AddBlogToFooter")
                        .HasColumnType("bit");

                    b.Property<bool>("AddBlogToHome")
                        .HasColumnType("bit");

                    b.Property<bool>("AddBlogToMenu")
                        .HasColumnType("bit");

                    b.Property<bool>("AddCareerToFooter")
                        .HasColumnType("bit");

                    b.Property<bool>("AddCareerToMenu")
                        .HasColumnType("bit");

                    b.Property<bool>("AddFaqToFooter")
                        .HasColumnType("bit");

                    b.Property<bool>("AddFaqToHome")
                        .HasColumnType("bit");

                    b.Property<bool>("AddPartnerToHome")
                        .HasColumnType("bit");

                    b.Property<bool>("AddTestimonyToFooter")
                        .HasColumnType("bit");

                    b.Property<bool>("AddTestimonyToHome")
                        .HasColumnType("bit");

                    b.Property<string>("AddressOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlogDisplayTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BreakingNewsRibonTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CareerDisplayTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomMenuTop")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DefaultAttendanceCloseTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DefaultAttendanceStartTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DefaultAttendanceStartTimeSaturday")
                        .HasColumnType("datetime2");

                    b.Property<string>("DefaultTitleBackgroundKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultTitleBackgroundUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DisableMainTopMenu")
                        .HasColumnType("bit");

                    b.Property<int>("EarlyMinute")
                        .HasColumnType("int");

                    b.Property<string>("EmailOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailThree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EnableBreakingNewsRibon")
                        .HasColumnType("bit");

                    b.Property<string>("FacebookPage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoogleMap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstagramPage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobCardNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobCardTitleBackgroundKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobCardTitleBackgroundUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LateMinute")
                        .HasColumnType("int");

                    b.Property<int>("OntimeMinute")
                        .HasColumnType("int");

                    b.Property<string>("PhoneOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneThree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qoute")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReportCloseTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("RibonPosition")
                        .HasColumnType("int");

                    b.Property<bool>("ShowAddressOneInTop")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowContactUsFooter")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowContactUsMenu")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowEmailOneInFooter")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowEmailOneInTop")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowEmailThreeInFooter")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowEmailThreeInTop")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowEmailTwoInFooter")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowEmailTwoInTop")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowPhoneOneInFooter")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowPhoneOneInTop")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowPhoneThreeInFooter")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowPhoneThreeInTop")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowPhoneTwoInFooter")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowPhoneTwoInTop")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowProductsInFooter")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowProductsInMenu")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowSixProducts")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowThreeProducts")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowTwoProducts")
                        .HasColumnType("bit");

                    b.Property<string>("SignatureKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignatureName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignatureTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignatureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TiktokPage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TopNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TwitterPage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UseCategoryBlog")
                        .HasColumnType("bit");

                    b.Property<bool>("UseCustomMenuTop")
                        .HasColumnType("bit");

                    b.Property<int>("VeryLateMinute")
                        .HasColumnType("int");

                    b.Property<string>("WorkingHour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YoutubeChannel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Slider", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ButtonLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ButtonText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DisableVideoButton")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVideo")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiniTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Show")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoButtonText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YoutubeVideo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sliders");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.State", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("States");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.SuperSetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("ActivateAccountsOnFinanceManagement")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateAttendance")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateBirthdayTools")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateBlogContent")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateBudgetOnFinanceManagement")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateChatCommnunicationTools")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateComingSoon")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateCommnunicationTools")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateCommunicationReportAndAnalysis")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateContactInformationContent")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateContactUsCommnunicationTools")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateContentManagement")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateContentReportAndAnalysis")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateDashboard")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateDownloadOurAppFooter")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateEmailTools")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateExpensesOnFinanceManagement")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateFaqContent")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateFinanceManagement")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateForumCommnunicationTools")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateJobReferrals")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateLogin")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateLoginInMenu")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateManagementTools")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateNewsletterTools")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateNoticeBoardCommnunicationTools")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateOfficeActivity")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateOnlyAuthorizedDevice")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateOrder")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivatePagesContent")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivatePaymentOnFinanceManagement")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateProductContent")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateProfilePortfolio")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateProject")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateProjectReportAndAnalysis")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateProposalManagement")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateReport")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateReportAndAnalysis")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateReportOnFinanceManagement")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateRoles")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateSMS")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateSalaries")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateSettings")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateSiteMap")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateSliderContent")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateSmsTools")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateSubscribeFormOnFooter")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateTask")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateTestimonyContent")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateTrainings")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateUser")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateUserManagement")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateUserReportAndAnalysis")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateVisitorsReportAndAnalysis")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateWorkWithUsFooter")
                        .HasColumnType("bit");

                    b.Property<string>("AppStoreImageKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AppStoreImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AppStoreLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlogTemplateKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BucketName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ChartsDashboard")
                        .HasColumnType("bit");

                    b.Property<string>("ColorTemplateKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CommunicationDashboard")
                        .HasColumnType("bit");

                    b.Property<string>("CompanyDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyIconKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyIconUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyLogoKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyLogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyWebsiteLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyWhiteLogoKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyWhiteLogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Configuration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DashboardCSS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DashboardTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionDownloadOurAppFooter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailTemplate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FinanceDashboard")
                        .HasColumnType("bit");

                    b.Property<string>("FooterTemplateKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("JustWebsite")
                        .HasColumnType("bit");

                    b.Property<string>("LayoutCSS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LiveConfiguration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoginBackgroundImageKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoginBackgroundImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoginCSS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoginNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoginNoteFooter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoginNoteTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoginTemplateKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoginTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaximumUsers")
                        .HasColumnType("int");

                    b.Property<bool>("OrderDashboard")
                        .HasColumnType("bit");

                    b.Property<string>("PageHeaderTemplateKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayStoreImageKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayStoreImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayStoreLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortfolioBreacrumImageKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortfolioBreacrumImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortfolioDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortfolioImageOneKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortfolioImageOneUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortfolioImageTwoKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortfolioImageTwoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortfolioMiniTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortfolioTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductTemplateKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductTitleHome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ProjectsDashboard")
                        .HasColumnType("bit");

                    b.Property<bool>("RedirectTohttps")
                        .HasColumnType("bit");

                    b.Property<bool>("RedirectTohttpswww")
                        .HasColumnType("bit");

                    b.Property<string>("ReloaderIconKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReloaderIconUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReloaderTemplateKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SMSTemplate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ShowInFooterPortfolio")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowInMenuPortfolio")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowMadeByJuray")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowMadeByXYZ")
                        .HasColumnType("bit");

                    b.Property<string>("SliderTemplateKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SpecialMenuButtonActivate")
                        .HasColumnType("bit");

                    b.Property<string>("SpecialMenuButtonLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialMenuButtonText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("StatisticsDashboard")
                        .HasColumnType("bit");

                    b.Property<string>("TemplateLayoutKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleDownloadOurAppFooter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleWorkWithUsFooter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UseNormalLogoInLogin")
                        .HasColumnType("bit");

                    b.Property<bool>("UseWhiteLogoInLogin")
                        .HasColumnType("bit");

                    b.Property<bool>("UsersDashboard")
                        .HasColumnType("bit");

                    b.Property<string>("VerifyTokenFolio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebsiteTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SuperSettings");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.TemplateCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Layout")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoginLayout")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateColorPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniqueKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TemplateCategories");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.TemplateType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("TemplateCategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("TrackKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TemplateCategoryId");

                    b.ToTable("TemplateTypes");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Testimony", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Show")
                        .HasColumnType("bit");

                    b.Property<string>("SortOrder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Testimonies");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Training", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CloseTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModeratorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("QuestionsAndAnswers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Topic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrainingStatus")
                        .HasColumnType("int");

                    b.Property<string>("TrainnerId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ModeratorId");

                    b.HasIndex("TrainnerId");

                    b.ToTable("Trainings");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.TrainingAttendance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<long>("TrainingId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("TrainingId");

                    b.HasIndex("UserId");

                    b.ToTable("TrainingAttendances");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.TrainingSchedule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Moderator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Topic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrainingStatus")
                        .HasColumnType("int");

                    b.Property<string>("Trainner")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TrainingSchedules");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.UserCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Publish")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowInDashboard")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowInMenu")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserCategories");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.WebPage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("DirectUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EnableDirectUrl")
                        .HasColumnType("bit");

                    b.Property<int>("HomeSortFrom")
                        .HasColumnType("int");

                    b.Property<string>("ImageKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PageCategoryId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Publish")
                        .HasColumnType("bit");

                    b.Property<bool>("SecurityPage")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowInFooter")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowInMainMenu")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowInMainTop")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowInMenuDropDown")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PageCategoryId");

                    b.ToTable("WebPages");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.AdditionalProfile", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Attendance", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.Profile", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Blog", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.BlogCategory", "BlogCategory")
                        .WithMany("Blogs")
                        .HasForeignKey("BlogCategoryId");

                    b.Navigation("BlogCategory");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ChatMessage", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.Profile", "Receiver")
                        .WithMany()
                        .HasForeignKey("ReceiverId");

                    b.HasOne("JurayUniversal.Domain.Models.Profile", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Receiver");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.CompanyFund", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.FundSource", "FundSource")
                        .WithMany("CompanyFunds")
                        .HasForeignKey("FundSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FundSource");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.CompanyProgram", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.CompanyProgramCategory", "CompanyProgramCategory")
                        .WithMany("CompanyPrograms")
                        .HasForeignKey("CompanyProgramCategoryId");

                    b.Navigation("CompanyProgramCategory");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.CompayExpenses", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.ExpensesCategory", "ExpensesCategory")
                        .WithMany("CompayExpenses")
                        .HasForeignKey("ExpensesCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JurayUniversal.Domain.Models.Profile", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExpensesCategory");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.DashboardDataList", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.DashboardData", "DashboardData")
                        .WithMany("DashboardDataLists")
                        .HasForeignKey("DashboardDataId");

                    b.Navigation("DashboardData");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.FundSource", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.Profile", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Job", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.JobCategory", "JobCategory")
                        .WithMany("Jobs")
                        .HasForeignKey("JobCategoryId");

                    b.HasOne("JurayUniversal.Domain.Models.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId");

                    b.Navigation("JobCategory");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.JobFeature", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.Job", "Job")
                        .WithMany("Features")
                        .HasForeignKey("JobId");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.LocalGoverment", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.State", "States")
                        .WithMany("LocalGov")
                        .HasForeignKey("StatesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("States");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.MeetingAttendance", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.Meeting", "Meeting")
                        .WithMany("MeetingAttendances")
                        .HasForeignKey("MeetingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JurayUniversal.Domain.Models.Profile", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Meeting");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.OfficeActivityDialy", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.Profile", "LastUpdateBy")
                        .WithMany()
                        .HasForeignKey("LastUpdateById");

                    b.HasOne("JurayUniversal.Domain.Models.OfficeActivityCategory", "OfficeActivityCategory")
                        .WithMany("OfficeActivityDialies")
                        .HasForeignKey("OfficeActivityCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LastUpdateBy");

                    b.Navigation("OfficeActivityCategory");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.PageSection", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.WebPage", "WebPage")
                        .WithMany("PageSections")
                        .HasForeignKey("WebPageId");

                    b.Navigation("WebPage");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.PageSectionList", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.PageSection", "PageSection")
                        .WithMany("PageSectionLists")
                        .HasForeignKey("PageSectionId");

                    b.Navigation("PageSection");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Plan", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.JobCategory", "JobCategory")
                        .WithMany("Plans")
                        .HasForeignKey("JobCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobCategory");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.PortfolioContactUs", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Product", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.ProductCategory", "ProductCategory")
                        .WithMany("Product")
                        .HasForeignKey("ProductCategoryId");

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProductFeature", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.Product", "Product")
                        .WithMany("ProductFeatures")
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProductSample", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.Product", "Product")
                        .WithMany("ProductSamples")
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Profile", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.JobDesignation", "JobDesignation")
                        .WithMany("Profiles")
                        .HasForeignKey("JobDesignationId");

                    b.HasOne("JurayUniversal.Domain.Models.UserCategory", "UserCategory")
                        .WithMany("Profiles")
                        .HasForeignKey("UserCategoryId");

                    b.Navigation("JobDesignation");

                    b.Navigation("UserCategory");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProfileCategory", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProfileCategoryList", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.ProfileCategory", "ProfileCategory")
                        .WithMany("ProfileCategoryLists")
                        .HasForeignKey("ProfileCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JurayUniversal.Domain.Models.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");

                    b.Navigation("ProfileCategory");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProfilePortfolio", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProfilePortfolioSetting", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.PortfolioTemplate", "PortfolioTemplate")
                        .WithMany()
                        .HasForeignKey("PortfolioTemplateId");

                    b.HasOne("JurayUniversal.Domain.Models.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PortfolioTemplate");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProgramUser", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.CompanyProgram", "CompanyProgram")
                        .WithMany()
                        .HasForeignKey("CompanyProgramId");

                    b.HasOne("JurayUniversal.Domain.Models.Profile", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("CompanyProgram");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProjectFeature", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.GeneralFeature", "GeneralFeature")
                        .WithMany()
                        .HasForeignKey("GeneralFeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JurayUniversal.Domain.Models.ProjectMain", "ProjectMain")
                        .WithMany("ProjectFeatures")
                        .HasForeignKey("ProjectMainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GeneralFeature");

                    b.Navigation("ProjectMain");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProjectFile", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.ProjectMain", "ProjectMain")
                        .WithMany("ProjectFiles")
                        .HasForeignKey("ProjectMainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjectMain");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProjectMain", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.Profile", "ProfileReferral")
                        .WithMany()
                        .HasForeignKey("ProfileReferralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JurayUniversal.Domain.Models.ProjectCategory", "ProjectCategory")
                        .WithMany("ProjectMains")
                        .HasForeignKey("ProjectCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfileReferral");

                    b.Navigation("ProjectCategory");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProjectTask", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JurayUniversal.Domain.Models.ProjectFeature", "ProjectFeature")
                        .WithMany("ProjectTasks")
                        .HasForeignKey("ProjectFeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");

                    b.Navigation("ProjectFeature");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProjectTeam", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.ProjectMain", "ProjectMain")
                        .WithMany("ProjectTeams")
                        .HasForeignKey("ProjectMainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjectMain");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProjectUser", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JurayUniversal.Domain.Models.ProjectPosition", "ProjectPosition")
                        .WithMany()
                        .HasForeignKey("ProjectPositionId");

                    b.HasOne("JurayUniversal.Domain.Models.ProjectTeam", "ProjectTeam")
                        .WithMany("ProjectUsers")
                        .HasForeignKey("ProjectTeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("Profile");

                    b.Navigation("ProjectPosition");

                    b.Navigation("ProjectTeam");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Proposal", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.Profile", "SubmittedBy")
                        .WithMany()
                        .HasForeignKey("SubmittedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubmittedBy");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProposalFile", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.Proposal", "Proposal")
                        .WithMany("ProposalFile")
                        .HasForeignKey("ProposalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proposal");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Report", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.Profile", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Salary", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.Profile", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.TemplateType", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.TemplateCategory", null)
                        .WithMany("TemplateTypes")
                        .HasForeignKey("TemplateCategoryId");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Training", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.Profile", "Moderator")
                        .WithMany()
                        .HasForeignKey("ModeratorId");

                    b.HasOne("JurayUniversal.Domain.Models.Profile", "Trainner")
                        .WithMany()
                        .HasForeignKey("TrainnerId");

                    b.Navigation("Moderator");

                    b.Navigation("Trainner");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.TrainingAttendance", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.Training", "Training")
                        .WithMany("TrainingAttendances")
                        .HasForeignKey("TrainingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JurayUniversal.Domain.Models.Profile", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Training");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.WebPage", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.PageCategory", "PageCategory")
                        .WithMany("WebPages")
                        .HasForeignKey("PageCategoryId");

                    b.Navigation("PageCategory");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.Profile", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.Profile", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JurayUniversal.Domain.Models.Profile", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("JurayUniversal.Domain.Models.Profile", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.BlogCategory", b =>
                {
                    b.Navigation("Blogs");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.CompanyProgramCategory", b =>
                {
                    b.Navigation("CompanyPrograms");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.DashboardData", b =>
                {
                    b.Navigation("DashboardDataLists");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ExpensesCategory", b =>
                {
                    b.Navigation("CompayExpenses");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.FundSource", b =>
                {
                    b.Navigation("CompanyFunds");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Job", b =>
                {
                    b.Navigation("Features");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.JobCategory", b =>
                {
                    b.Navigation("Jobs");

                    b.Navigation("Plans");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.JobDesignation", b =>
                {
                    b.Navigation("Profiles");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Meeting", b =>
                {
                    b.Navigation("MeetingAttendances");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.OfficeActivityCategory", b =>
                {
                    b.Navigation("OfficeActivityDialies");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.PageCategory", b =>
                {
                    b.Navigation("WebPages");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.PageSection", b =>
                {
                    b.Navigation("PageSectionLists");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Product", b =>
                {
                    b.Navigation("ProductFeatures");

                    b.Navigation("ProductSamples");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProductCategory", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProfileCategory", b =>
                {
                    b.Navigation("ProfileCategoryLists");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProjectCategory", b =>
                {
                    b.Navigation("ProjectMains");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProjectFeature", b =>
                {
                    b.Navigation("ProjectTasks");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProjectMain", b =>
                {
                    b.Navigation("ProjectFeatures");

                    b.Navigation("ProjectFiles");

                    b.Navigation("ProjectTeams");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.ProjectTeam", b =>
                {
                    b.Navigation("ProjectUsers");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Proposal", b =>
                {
                    b.Navigation("ProposalFile");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.State", b =>
                {
                    b.Navigation("LocalGov");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.TemplateCategory", b =>
                {
                    b.Navigation("TemplateTypes");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.Training", b =>
                {
                    b.Navigation("TrainingAttendances");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.UserCategory", b =>
                {
                    b.Navigation("Profiles");
                });

            modelBuilder.Entity("JurayUniversal.Domain.Models.WebPage", b =>
                {
                    b.Navigation("PageSections");
                });
#pragma warning restore 612, 618
        }
    }
}
